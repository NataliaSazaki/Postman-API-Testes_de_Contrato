{
	"info": {
		"_postman_id": "2085e66b-db5b-42b9-8d00-7c622ce24075",
		"name": "ServeRest - Testes de Contrato",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12389497"
	},
	"item": [
		{
			"name": "Autenticação",
			"item": [
				{
					"name": "Cadastrar Usuários",
					"item": [
						{
							"name": "Cadastrar usuário admin com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/* \r",
											"Cenario: Cadastrar novo usuário com sucesso\r",
											"Dado que envie todas as informações válidas\r",
											"Quando enviar a requisição POST para a rota de adição de usuário\r",
											"Entao a API deve retornar um código de status 201 (Created) e confirmar que o novo usuário foi cadastrado com sucesso.\r",
											"*/\r",
											"\r",
											"pm.test(\"Status code é 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de sucesso\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"});\r",
											"\r",
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"_id\", resposta._id);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Novo Usuário\",\r\n  \"email\": \"novoemail@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar usuário com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Novo Usuário\",\r\n  \"email\": \"novoemail@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "82"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Sep 2024 01:26:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"317CAhWq2Bc82PVD\"\n}"
								}
							]
						},
						{
							"name": "Cadastrar usuário não admin com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/* \r",
											"Cenario: Cadastrar novo usuário não administrador com sucesso\r",
											"Dado que envie todas as informações válidas\r",
											"Quando enviar a requisição POST para a rota de adição de usuário\r",
											"Entao a API deve retornar um código de status 201 (Created) e confirmar que o novo usuário foi cadastrado com sucesso.\r",
											"*/\r",
											"\r",
											"const resposta = pm.response.json();\r",
											"pm.globals.set (\"_idnonadmin\", resposta.authorization);\r",
											"\r",
											"pm.test(\"Status code é 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de sucesso\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Usuário Nao Admin 5\",\r\n  \"email\": \"testenonadmin@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"false\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar usuário não admin com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Usuário Nao Admin\",\r\n  \"email\": \"usernotadmin@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"false\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "82"
										},
										{
											"key": "Date",
											"value": "Thu, 26 Sep 2024 22:34:14 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"rbn9Kqk1paXw00im\"\n}"
								}
							]
						},
						{
							"name": "E-mail já cadastrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/* \r",
											"Cenario: Cadastrar usuário com e-mail já cadastrado\r",
											"Dado que envie todas as informações válidas, exceto o campo nome\r",
											"Quando enviar a requisição POST para a rota de adição de usuário\r",
											"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando que o e-mail já está sendo utilizado\r",
											"*/\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de erro\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Kleber Souza\",\r\n  \"email\": \"klebersouza@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Kleber Souza\",\r\n  \"email\": \"klebersouza@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "53"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Sep 2024 01:29:42 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Este email já está sendo usado\"\n}"
								}
							]
						},
						{
							"name": "Cadastrar usuário sem nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/* \r",
											"Cenario: Cadastrar usuário sem nome\r",
											"Dado que envie todas as informações válidas, exceto o campo nome\r",
											"Quando enviar a requisição POST para a rota de adição de usuário\r",
											"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando o campo não pode ficar em branco\r",
											"*/\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de erro\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"nome não pode ficar em branco\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"\",\r\n  \"email\": \"semnomel@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar usuário sem nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"\",\r\n  \"email\": \"semnomel@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "48"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Sep 2024 01:36:39 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"nome\": \"nome não pode ficar em branco\"\n}"
								}
							]
						},
						{
							"name": "Cadastrar usuário sem e-mail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/* \r",
											"Cenario: Cadastrar usuário sem e-mail\r",
											"Dado que envie todas as informações válidas, exceto o campo e-mail\r",
											"Quando enviar a requisição POST para a rota de adição de usuário\r",
											"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando o campo não pode ficar em branco\r",
											"*/\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de erro\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"email não pode ficar em branco\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Sem Email\",\r\n  \"email\": \"\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar usuário sem e-mail",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Sem Email\",\r\n  \"email\": \"\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Sep 2024 01:44:37 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"email\": \"email não pode ficar em branco\"\n}"
								}
							]
						},
						{
							"name": "Cadastrar usuário sem senha",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/* \r",
											"Cenario: Cadastrar usuário sem senha\r",
											"Dado que envie todas as informações válidas, exceto o campo senha\r",
											"Quando enviar a requisição POST para a rota de adição de usuário\r",
											"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando o campo não pode ficar em branco\r",
											"*/\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de erro\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"password não pode ficar em branco\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Sem Senha\",\r\n  \"email\": \"semsenha@pucminas.com.br\",\r\n  \"password\": \"\",\r\n  \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar usuário sem senha",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Sem Senha\",\r\n  \"email\": \"semsenha@pucminas.com.br\",\r\n  \"password\": \"\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "56"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Sep 2024 01:46:33 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"password\": \"password não pode ficar em branco\"\n}"
								}
							]
						},
						{
							"name": "Cadastrar usuário sem Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/* \r",
											"Cenario: Cadastrar usuário sem administrador\r",
											"Dado que envie todas as informações válidas, exceto o campo administrador\r",
											"Quando enviar a requisição POST para a rota de adição de usuário\r",
											"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando o campo não pode ficar em branco\r",
											"*/\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de erro\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"administrator deve ser 'true' ou 'false'\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Sem Administrador\",\r\n  \"email\": \"semadmin@pucminas.com.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar usuário sem Admin",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Sem Administrador\",\r\n  \"email\": \"semadmin@pucminas.com.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "67"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Sep 2024 01:51:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"administrador\": \"administrador deve ser 'true' ou 'false'\"\n}"
								}
							]
						},
						{
							"name": "Cadastrar usuário com Admin FALSE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/* \r",
											"Cenario: Cadastrar usuário com administrador FALSE\r",
											"Dado que envie todas as informações válidas\r",
											"Quando enviar a requisição POST para a rota de adição de usuário\r",
											"Entao a API deve retornar um código de status 201 (Created) e confirmar que o novo usuário foi cadastrado com sucesso.\r",
											"*/\r",
											"\r",
											"pm.test(\"Status code é 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de sucesso\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"});\r",
											"\r",
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"_id\", resposta._id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Administrador False\",\r\n  \"email\": \"adminfalse@pucminas.com.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"false\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar usuário com Admin FALSE",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Administrador False\",\r\n  \"email\": \"adminfalse@pucminas.com.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"false\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "82"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Sep 2024 01:53:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"zgBtABbRxTKqFLYq\"\n}"
								}
							]
						},
						{
							"name": "Cadastrar usuário com Admin TRUE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/* \r",
											"Cenario: Cadastrar usuário com administrador TRUE\r",
											"Dado que envie todas as informações válidas\r",
											"Quando enviar a requisição POST para a rota de adição de usuário\r",
											"Entao a API deve retornar um código de status 201 (Created) e confirmar que o novo usuário foi cadastrado com sucesso.\r",
											"*/\r",
											"\r",
											"pm.test(\"Status code é 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de sucesso\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"});\r",
											"\r",
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"_id\", resposta._id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Administrador True\",\r\n  \"email\": \"admintrue@pucminas.com.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Cadastrar usuário com Admin TRUE",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Administrador True\",\r\n  \"email\": \"admintrue@pucminas.com.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "82"
										},
										{
											"key": "Date",
											"value": "Wed, 25 Sep 2024 01:54:37 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"0VHIAFsl4wijkZOg\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Login",
					"item": [
						{
							"name": "Realizar login admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"pm.globals.set (\"token\", resposta.authorization);\r",
											"\r",
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de sucesso\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Login realizado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"fulano@qa.com\",\n  \"password\": \"teste\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								},
								"description": "A duração do token retornado em authorization é de 600 segundos (10 minutos). Caso esteja expirado irá receber status code 401 (Unauthorized).\n"
							},
							"response": [
								{
									"name": "Realizar login admin",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"klebersouza@pucminas.br\",\n  \"password\": \"pucminas\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "283"
										},
										{
											"key": "Date",
											"value": "Fri, 27 Sep 2024 00:01:32 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Login realizado com sucesso\",\n    \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImtsZWJlcnNvdXphQHB1Y21pbmFzLmJyIiwicGFzc3dvcmQiOiJwdWNtaW5hcyIsImlhdCI6MTcyNzM5NTI5MiwiZXhwIjoxNzI3Mzk1ODkyfQ.5wnHiCyVJMj9N3yXEu71HdpCmZ1HBVh-GL9MyevLpBg\"\n}"
								}
							]
						},
						{
							"name": "Realizar login user sem carrinho",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"pm.globals.set (\"token_semcarrinho\", resposta.authorization);\r",
											"\r",
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de sucesso\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Login realizado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"fulano@qa.com\",\n  \"password\": \"teste\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								},
								"description": "A duração do token retornado em authorization é de 600 segundos (10 minutos). Caso esteja expirado irá receber status code 401 (Unauthorized).\n"
							},
							"response": [
								{
									"name": "Realizar login user sem carrinho",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"fulano@qa.com\",\n  \"password\": \"teste\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "Date",
											"value": "Thu, 26 Sep 2024 23:59:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Login realizado com sucesso\",\n    \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNzI3Mzk1MTg2LCJleHAiOjE3MjczOTU3ODZ9.G0q_Mn_YsrUt7k8A_bW7Q8BfLXydptVpIvu_HZvKjFI\"\n}"
								}
							]
						},
						{
							"name": "Realizar login não Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"pm.globals.set (\"tokennaoadmin\", resposta.authorization);\r",
											"\r",
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de sucesso\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Login realizado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"usernon@pucminas.br\",\n  \"password\": \"pucminas\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								},
								"description": "A duração do token retornado em authorization é de 600 segundos (10 minutos). Caso esteja expirado irá receber status code 401 (Unauthorized).\n"
							},
							"response": [
								{
									"name": "Login não Admin com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"usernon@pucminas.br\",\n  \"password\": \"pucminas\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "277"
										},
										{
											"key": "Date",
											"value": "Thu, 26 Sep 2024 23:16:55 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Login realizado com sucesso\",\n    \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJub25AcHVjbWluYXMuYnIiLCJwYXNzd29yZCI6InB1Y21pbmFzIiwiaWF0IjoxNzI3MzkyNjE1LCJleHAiOjE3MjczOTMyMTV9.fPb46V0yjOvYJyxG4uCtlWy4baeqJwAra_WezMvkhOA\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Excluir usuário",
					"item": [
						{
							"name": "Excluir usuário",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de sucesso\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/usuarios/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios",
										":_id"
									],
									"variable": [
										{
											"key": "_id",
											"value": "HMLLJT6Xu8Q9dux2",
											"description": "(Required) ID do usuário"
										}
									]
								},
								"description": "Não é permitido excluir usuário com carrinho."
							},
							"response": [
								{
									"name": "Registro excluído com sucesso | Nenhum registro excluído",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "/localhost:3000/usuarios/:_id",
											"path": [
												"localhost:3000",
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Usuário com carrinho cadastrado",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"idCarrinho\": \"<string>\"\n}"
								},
								{
									"name": "Excluir usuário",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id",
													"value": "HMLLJT6Xu8Q9dux2",
													"description": "(Required) ID do usuário"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "51"
										},
										{
											"key": "Date",
											"value": "Thu, 26 Sep 2024 22:38:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Registro excluído com sucesso\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Testes de Contrato",
			"item": [
				{
					"name": "Usuários",
					"item": [
						{
							"name": "POST (usuários)",
							"item": [
								{
									"name": "Cadastrar usuário admin com sucesso",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar novo usuário com sucesso\r",
													"Dado que envie todas as informações válidas\r",
													"Quando enviar a requisição POST para a rota de adição de usuário\r",
													"Entao a API deve retornar um código de status 201 (Created) e confirmar que o novo usuário foi cadastrado com sucesso.\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code é 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de sucesso\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"});\r",
													"\r",
													"const resposta = pm.response.json();\r",
													"pm.collectionVariables.set(\"_id\", resposta._id); \r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Sucesso\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Usuario Contrato\",\r\n  \"email\": \"novoemail1@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar usuário com sucesso",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Novo Usuário\",\r\n  \"email\": \"novoemail@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Date",
													"value": "Wed, 25 Sep 2024 01:26:08 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"317CAhWq2Bc82PVD\"\n}"
										}
									]
								},
								{
									"name": "Cadastrar usuário não admin com sucesso",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar novo usuário não administrador com sucesso\r",
													"Dado que envie todas as informações válidas\r",
													"Quando enviar a requisição POST para a rota de adição de usuário\r",
													"Entao a API deve retornar um código de status 201 (Created) e confirmar que o novo usuário foi cadastrado com sucesso.\r",
													"*/\r",
													"\r",
													"const resposta = pm.response.json();\r",
													"pm.globals.set (\"_idnonadmin\", resposta.authorization);\r",
													"\r",
													"pm.test(\"Status code é 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de sucesso\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Sucesso\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Usuário Nao Admin 5\",\r\n  \"email\": \"testenonadmin@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"false\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar usuário não admin com sucesso",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Usuário Nao Admin\",\r\n  \"email\": \"usernotadmin@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"false\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Date",
													"value": "Thu, 26 Sep 2024 22:34:14 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"rbn9Kqk1paXw00im\"\n}"
										}
									]
								},
								{
									"name": "E-mail já cadastrado",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar usuário com e-mail já cadastrado\r",
													"Dado que envie todas as informações válidas, exceto o campo nome\r",
													"Quando enviar a requisição POST para a rota de adição de usuário\r",
													"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando que o e-mail já está sendo utilizado\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Kleber Souza\",\r\n  \"email\": \"klebersouza@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": [
										{
											"name": "E-mail já cadastrado",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Kleber Souza\",\r\n  \"email\": \"klebersouza@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "53"
												},
												{
													"key": "Date",
													"value": "Wed, 25 Sep 2024 01:29:42 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Este email já está sendo usado\"\n}"
										}
									]
								},
								{
									"name": "Cadastrar usuário sem nome",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar usuário sem nome\r",
													"Dado que envie todas as informações válidas, exceto o campo nome\r",
													"Quando enviar a requisição POST para a rota de adição de usuário\r",
													"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando o campo não pode ficar em branco\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"nome não pode ficar em branco\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"\",\r\n  \"email\": \"semnomel@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar usuário sem nome",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"\",\r\n  \"email\": \"semnomel@pucminas.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "Date",
													"value": "Wed, 25 Sep 2024 01:36:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"nome\": \"nome não pode ficar em branco\"\n}"
										}
									]
								},
								{
									"name": "Cadastrar usuário sem e-mail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar usuário sem e-mail\r",
													"Dado que envie todas as informações válidas, exceto o campo e-mail\r",
													"Quando enviar a requisição POST para a rota de adição de usuário\r",
													"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando o campo não pode ficar em branco\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"email não pode ficar em branco\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Sem Email\",\r\n  \"email\": \"\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar usuário sem e-mail",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Sem Email\",\r\n  \"email\": \"\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "Date",
													"value": "Wed, 25 Sep 2024 01:44:37 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"email\": \"email não pode ficar em branco\"\n}"
										}
									]
								},
								{
									"name": "Cadastrar usuário sem senha",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar usuário sem senha\r",
													"Dado que envie todas as informações válidas, exceto o campo senha\r",
													"Quando enviar a requisição POST para a rota de adição de usuário\r",
													"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando o campo não pode ficar em branco\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"password não pode ficar em branco\");\r",
													"}); \r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Sem Senha\",\r\n  \"email\": \"semsenha@pucminas.com.br\",\r\n  \"password\": \"\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar usuário sem senha",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Sem Senha\",\r\n  \"email\": \"semsenha@pucminas.com.br\",\r\n  \"password\": \"\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "56"
												},
												{
													"key": "Date",
													"value": "Wed, 25 Sep 2024 01:46:33 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"password\": \"password não pode ficar em branco\"\n}"
										}
									]
								},
								{
									"name": "Cadastrar usuário sem Admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar usuário sem administrador\r",
													"Dado que envie todas as informações válidas, exceto o campo administrador\r",
													"Quando enviar a requisição POST para a rota de adição de usuário\r",
													"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando o campo não pode ficar em branco\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"administrator deve ser 'true' ou 'false'\");\r",
													"}); \r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Sem Administrador\",\r\n  \"email\": \"semadmin@pucminas.com.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar usuário sem Admin",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Sem Administrador\",\r\n  \"email\": \"semadmin@pucminas.com.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "67"
												},
												{
													"key": "Date",
													"value": "Wed, 25 Sep 2024 01:51:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"administrador\": \"administrador deve ser 'true' ou 'false'\"\n}"
										}
									]
								},
								{
									"name": "Cadastrar usuário com Admin FALSE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar usuário com administrador FALSE\r",
													"Dado que envie todas as informações válidas\r",
													"Quando enviar a requisição POST para a rota de adição de usuário\r",
													"Entao a API deve retornar um código de status 201 (Created) e confirmar que o novo usuário foi cadastrado com sucesso.\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code é 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de sucesso\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"});\r",
													"\r",
													"const resposta = pm.response.json();\r",
													"pm.collectionVariables.set(\"_id\", resposta._id); \r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Sucesso\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Administrador False\",\r\n  \"email\": \"adminfalse@pucminas.com.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"false\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar usuário com Admin FALSE",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Administrador False\",\r\n  \"email\": \"adminfalse@pucminas.com.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"false\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Date",
													"value": "Wed, 25 Sep 2024 01:53:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"zgBtABbRxTKqFLYq\"\n}"
										}
									]
								},
								{
									"name": "Cadastrar usuário com Admin TRUE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar usuário com administrador TRUE\r",
													"Dado que envie todas as informações válidas\r",
													"Quando enviar a requisição POST para a rota de adição de usuário\r",
													"Entao a API deve retornar um código de status 201 (Created) e confirmar que o novo usuário foi cadastrado com sucesso.\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code é 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de sucesso\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"});\r",
													"\r",
													"const resposta = pm.response.json();\r",
													"pm.collectionVariables.set(\"_id\", resposta._id); \r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Sucesso\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"nome\": \"Administrador True\",\r\n  \"email\": \"admintrue@pucminas.com.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar usuário com Admin TRUE",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"nome\": \"Administrador True\",\r\n  \"email\": \"admintrue@pucminas.com.br\",\r\n  \"password\": \"pucminas\",\r\n  \"administrador\": \"true\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Date",
													"value": "Wed, 25 Sep 2024 01:54:37 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"0VHIAFsl4wijkZOg\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "GET (usuários)",
							"item": [
								{
									"name": "Listar usuários cadastrados com filtro",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code é 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Listagem de Usuários\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"quantidade\").that.is.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"usuarios\").that.is.an(\"array\");\r",
													"    \r",
													"    jsonData.usuario.forEach(function(usuario) {\r",
													"        pm.expect(usuario).to.have.property(\"nome\").that.is.a(\"string\");\r",
													"        pm.expect(usuario).to.have.property(\"email\").that.is.a(\"string\");\r",
													"        pm.expect(usuario).to.have.property(\"password\").that.is.a(\"string\");\r",
													"        pm.expect(usuario).to.have.property(\"administrador\").that.is.a(\"string\");\r",
													"        pm.expect(usuario).to.have.property(\"_id\").that.is.a(\"string\");\r",
													"        pm.expect(usuario).to.be.an(\"object\");\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usuarios?_id={{_id}}&nome=Kleber Souza&email=klebersouza@pucminas.br&password=pucminas&administrador=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											],
											"query": [
												{
													"key": "_id",
													"value": "{{_id}}"
												},
												{
													"key": "nome",
													"value": "Kleber Souza"
												},
												{
													"key": "email",
													"value": "klebersouza@pucminas.br"
												},
												{
													"key": "password",
													"value": "pucminas"
												},
												{
													"key": "administrador",
													"value": "true"
												}
											]
										}
									},
									"response": [
										{
											"name": "Lista de usuários",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "/localhost:3000/usuarios?_id=<string>&nome=<string>&email=<string>&password=<string>&administrador=false",
													"path": [
														"localhost:3000",
														"usuarios"
													],
													"query": [
														{
															"key": "_id",
															"value": "<string>"
														},
														{
															"key": "nome",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "password",
															"value": "<string>"
														},
														{
															"key": "administrador",
															"value": "false"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"quantidade\": \"<number>\",\n  \"usuarios\": [\n    {\n      \"nome\": \"<string>\",\n      \"email\": \"<string>\",\n      \"password\": \"<string>\",\n      \"administrador\": \"true\",\n      \"_id\": \"<string>\"\n    },\n    {\n      \"nome\": \"<string>\",\n      \"email\": \"<string>\",\n      \"password\": \"<string>\",\n      \"administrador\": \"true\",\n      \"_id\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Listar usuários cadastrados",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code é 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Listagem de Usuários\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"quantidade\").that.is.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"usuarios\").that.is.an(\"array\");\r",
													"    \r",
													"    jsonData.usuario.forEach(function(usuario) {\r",
													"        pm.expect(usuario).to.have.property(\"nome\").that.is.a(\"string\");\r",
													"        pm.expect(usuario).to.have.property(\"email\").that.is.a(\"string\");\r",
													"        pm.expect(usuario).to.have.property(\"password\").that.is.a(\"string\");\r",
													"        pm.expect(usuario).to.have.property(\"administrador\").that.is.a(\"string\");\r",
													"        pm.expect(usuario).to.have.property(\"_id\").that.is.a(\"string\");\r",
													"        pm.expect(usuario).to.be.an(\"object\");\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"response": [
										{
											"name": "Listar usuários cadastrados",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usuarios",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1803"
												},
												{
													"key": "Date",
													"value": "Thu, 26 Sep 2024 22:59:45 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"quantidade\": 8,\n    \"usuarios\": [\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"fulano@qa.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"0uxuPY0cbmQhpEz1\"\n        },\n        {\n            \"nome\": \"Usuário Nao Admin\",\n            \"email\": \"usernon@pucminas.br\",\n            \"password\": \"pucminas\",\n            \"administrador\": \"false\",\n            \"_id\": \"9Vz4sZOYEpbRsM6C\"\n        },\n        {\n            \"nome\": \"Novo Usuário\",\n            \"email\": \"novoemail@pucminas.br\",\n            \"password\": \"pucminas\",\n            \"administrador\": \"true\",\n            \"_id\": \"anm8vP8QO9luRJlS\"\n        },\n        {\n            \"nome\": \"Usuário Nao Admin 4\",\n            \"email\": \"usernot@pucminas.br\",\n            \"password\": \"pucminas\",\n            \"administrador\": \"false\",\n            \"_id\": \"pdfuSrORxJ6f3MQF\"\n        },\n        {\n            \"nome\": \"Usuário Nao Admin\",\n            \"email\": \"usernotadmin@pucminas.br\",\n            \"password\": \"pucminas\",\n            \"administrador\": \"false\",\n            \"_id\": \"rbn9Kqk1paXw00im\"\n        },\n        {\n            \"nome\": \"Kleber Jacques F. Souza\",\n            \"email\": \"klebersouza@pucminas.br\",\n            \"password\": \"pucminas\",\n            \"administrador\": \"true\",\n            \"_id\": \"rjJSfHomZCJHxThP\"\n        },\n        {\n            \"nome\": \"Usuário Nao Admin 5\",\n            \"email\": \"testenonadmin@pucminas.br\",\n            \"password\": \"pucminas\",\n            \"administrador\": \"false\",\n            \"_id\": \"vhIwXUyrZP7w1WmM\"\n        },\n        {\n            \"nome\": \"Usuário Nao Admin\",\n            \"email\": \"usern@pucminas.br\",\n            \"password\": \"pucminas\",\n            \"administrador\": \"false\",\n            \"_id\": \"wRCnaqdAlZapYhyH\"\n        }\n    ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "{_id}",
							"item": [
								{
									"name": "GET (usuários {_ID})",
									"item": [
										{
											"name": "Buscar usuário por ID (sucesso)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"/* \r",
															"Cenario: Buscar usuário pelo ID\r",
															"Dado que o ID existe no cadastro\r",
															"Quando enviar a requisição GET para a rota busca pelo id do usuário\r",
															"Entao a API deve retornar um código de status 200 (OK)\r",
															"E as informações detalhadas do usuário devem ser retornadas corretamente\r",
															"*/\r",
															"\r",
															"pm.test(\"Status code é 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Buscar usuário por ID (sucesso)\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.be.an(\"object\");\r",
															"    pm.expect(jsonData).to.have.property(\"nome\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData).to.have.property(\"email\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData).to.have.property(\"password\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData).to.have.property(\"administrador\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData).to.have.property(\"_id\").that.is.a(\"string\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{_id}}",
															"description": "(Required) ID do usuário"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Buscar usuário por ID (falha)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"/* \r",
															"Cenario: Buscar usuário pelo ID\r",
															"Dado que o ID não existe no cadastro\r",
															"Quando enviar a requisição GET para a rota busca pelo id do usuário\r",
															"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando que o usuário não foi encontrado\r",
															"*/\r",
															"\r",
															"pm.test(\"Status code é 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Validar mensagem de erro\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Usuário não encontrado\");\r",
															"}); \r",
															"\r",
															"pm.test(\"Validação da estrutura de resposta - Erro\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.be.an(\"object\");\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "abcd",
															"description": "(Required) ID do usuário"
														}
													]
												}
											},
											"response": [
												{
													"name": "Buscar usuário por ID (falha)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "abcd",
																	"description": "(Required) ID do usuário"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "45"
														},
														{
															"key": "Date",
															"value": "Wed, 25 Sep 2024 02:50:15 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Usuário não encontrado\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "PUT (usuários {_ID})",
									"item": [
										{
											"name": "Editar usuário MESMO E-MAIL (falha)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"/* \r",
															"Cenario: Validar falha na edição de usuário com e-mail já em uso\r",
															"Dado que o email ja está cadastrado\r",
															"Quando enviar a requisição GET para a rota de edição por ID\r",
															"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando que o email já está sendo usado\r",
															"*/\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Validar mensagem de sucesso\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
															"});\r",
															"\r",
															"pm.test(\"Validação da estrutura de resposta - Edição\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.be.an(\"object\");\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"nome\": \"Kleber Jacques F. Souza\",\n  \"email\": \"klebersouza@pucminas.br\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"true\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{_id}}",
															"description": "(Required) ID do usuário"
														}
													]
												},
												"description": "Não é permitido cadastrar usuário com email já utilizado.\nCaso não seja encontrado usuário com o ID informado é realizado novo cadastro ao invés de alteração.\n"
											},
											"response": [
												{
													"name": "Editar usuário MESMO E-MAIL (falha)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"nome\": \"Kleber Jacques F. Souza\",\n  \"email\": \"klebersouza@pucminas.br\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"true\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{_id}}",
																	"description": "(Required) ID do usuário"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "53"
														},
														{
															"key": "Date",
															"value": "Wed, 25 Sep 2024 02:13:07 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Este email já está sendo usado\"\n}"
												}
											]
										},
										{
											"name": "Editar usuário (sem nome)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"/* \r",
															"Cenario: Validar falha na edição de usuário com campo nome em branco\r",
															"Dado que o ID  existe na base de dados e o campo nome em branco\r",
															"Quando enviar a requisição GET para a rota de edição por ID\r",
															"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando que o campo não pode ficar em branco\r",
															"*/\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Validar mensagem de erro\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"nome não pode ficar em branco\");\r",
															"});\r",
															"\r",
															"pm.test(\"Validação da estrutura de resposta - Edição\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.be.an(\"object\");\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"nome\": \"\",\n  \"email\": \"editsemnome@pucminas.br\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"true\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{_id}}",
															"description": "(Required) ID do usuário"
														}
													]
												},
												"description": "Não é permitido cadastrar usuário com email já utilizado.\nCaso não seja encontrado usuário com o ID informado é realizado novo cadastro ao invés de alteração.\n"
											},
											"response": [
												{
													"name": "Editar usuário (sem nome)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"nome\": \"\",\n  \"email\": \"editsemnome@pucminas.br\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"true\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{_id}}",
																	"description": "(Required) ID do usuário"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "48"
														},
														{
															"key": "Date",
															"value": "Wed, 25 Sep 2024 02:41:17 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"nome\": \"nome não pode ficar em branco\"\n}"
												}
											]
										},
										{
											"name": "Editar usuário (sem e-mail)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"/* \r",
															"Cenario: Validar falha na edição de usuário com campo e-mail em branco\r",
															"Dado que o ID  existe na base de dados e o campo e-mail em branco\r",
															"Quando enviar a requisição GET para a rota de edição por ID\r",
															"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando que o campo não pode ficar em branco\r",
															"*/\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Validar mensagem de erro\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"e-mail não pode ficar em branco\");\r",
															"});\r",
															"\r",
															"pm.test(\"Validação da estrutura de resposta - Edição\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.be.an(\"object\");\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"nome\": \"Edit Sem E-mail\",\n  \"email\": \"\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"true\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{_id}}",
															"description": "(Required) ID do usuário"
														}
													]
												},
												"description": "Não é permitido cadastrar usuário com email já utilizado.\nCaso não seja encontrado usuário com o ID informado é realizado novo cadastro ao invés de alteração.\n"
											},
											"response": [
												{
													"name": "Editar usuário (sem e-mail)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"nome\": \"Edit Sem E-mail\",\n  \"email\": \"\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"true\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{_id}}",
																	"description": "(Required) ID do usuário"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "50"
														},
														{
															"key": "Date",
															"value": "Wed, 25 Sep 2024 02:44:10 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"email\": \"email não pode ficar em branco\"\n}"
												}
											]
										},
										{
											"name": "Editar usuário (sem senha)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"/* \r",
															"Cenario: Validar falha na edição de usuário com campo senha em branco\r",
															"Dado que o ID  existe na base de dados e o campo senha em branco\r",
															"Quando enviar a requisição GET para a rota de edição por ID\r",
															"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando que o campo não pode ficar em branco\r",
															"*/\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Validar mensagem de erro\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"passsword não pode ficar em branco\");\r",
															"}); \r",
															"\r",
															"pm.test(\"Validação da estrutura de resposta - Edição\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.be.an(\"object\");\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"nome\": \"Edit Sem Senha\",\n  \"email\": \"editsemsenha@pucminas.com.br\",\n  \"password\": \"\",\n  \"administrador\": \"true\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{_id}}",
															"description": "(Required) ID do usuário"
														}
													]
												},
												"description": "Não é permitido cadastrar usuário com email já utilizado.\nCaso não seja encontrado usuário com o ID informado é realizado novo cadastro ao invés de alteração.\n"
											},
											"response": [
												{
													"name": "Editar usuário (sem senha)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"nome\": \"Edit Sem Senha\",\n  \"email\": \"editsemsenha@pucminas.com.br\",\n  \"password\": \"\",\n  \"administrador\": \"true\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{_id}}",
																	"description": "(Required) ID do usuário"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "56"
														},
														{
															"key": "Date",
															"value": "Wed, 25 Sep 2024 02:46:11 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"password\": \"password não pode ficar em branco\"\n}"
												}
											]
										},
										{
											"name": "Editar usuário (sem admin)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"/* \r",
															"Cenario: Validar falha na edição de usuário com campo administrador em branco\r",
															"Dado que o ID  existe na base de dados e o campo administrador em branco\r",
															"Quando enviar a requisição GET para a rota de edição por ID\r",
															"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando que o campo não pode ficar em branco\r",
															"*/\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Validar mensagem de erro\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"administrador deve ser 'true' ou 'false'\");\r",
															"});\r",
															"\r",
															"pm.test(\"Validação da estrutura de resposta - Edição\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.be.an(\"object\");\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"nome\": \"Edit Sem Administrador\",\n  \"email\": \"editsemadmin@pucminas.com.br\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{_id}}",
															"description": "(Required) ID do usuário"
														}
													]
												},
												"description": "Não é permitido cadastrar usuário com email já utilizado.\nCaso não seja encontrado usuário com o ID informado é realizado novo cadastro ao invés de alteração.\n"
											},
											"response": [
												{
													"name": "Editar usuário (sem admin)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"nome\": \"Edit Sem Administrador\",\n  \"email\": \"editsemadmin@pucminas.com.br\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{_id}}",
																	"description": "(Required) ID do usuário"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "67"
														},
														{
															"key": "Date",
															"value": "Wed, 25 Sep 2024 02:47:57 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"administrador\": \"administrador deve ser 'true' ou 'false'\"\n}"
												}
											]
										},
										{
											"name": "Editar usuário CADASTRO (sucesso)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"/* \r",
															"Cenario: Validar sucesso na edição de usuário com ID inexistente\r",
															"Dado que o ID não esite na base de dados\r",
															"Quando enviar a requisição GET para a rota de edição por ID\r",
															"Entao a API deve retornar um código de status 201 (Crreated) e uma mensagem de sucesso ao criar novo usuário\r",
															"*/\r",
															"\r",
															"pm.test(\"Status code é 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"pm.test(\"Validar mensagem de sucesso\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
															"});\r",
															"\r",
															"const resposta = pm.response.json();\r",
															"\r",
															"pm.collectionVariables.set(\"_id\", resposta._id); \r",
															"\r",
															"pm.test(\"Validação da estrutura de resposta - Edição\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.be.an(\"object\");\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"nome\": \"Editar Suceso\",\n  \"email\": \"editsucesso1@pucminas.br\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"true\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "abc",
															"description": "(Required) ID do usuário"
														}
													]
												},
												"description": "Não é permitido cadastrar usuário com email já utilizado.\nCaso não seja encontrado usuário com o ID informado é realizado novo cadastro ao invés de alteração.\n"
											},
											"response": [
												{
													"name": "Editar usuário CADASTRO (sucesso)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"nome\": \"Editar Suceso\",\n  \"email\": \"editsucesso@pucminas.br\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"true\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "abc",
																	"description": "(Required) ID do usuário"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "82"
														},
														{
															"key": "Date",
															"value": "Wed, 25 Sep 2024 02:23:52 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"p5GVMTBUCaLyfKGe\"\n}"
												}
											]
										},
										{
											"name": "Editar usuário ALTERAÇÃO (sucesso)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"/* \r",
															"Cenario: Validar sucesso na edição de usuário com ID existente\r",
															"Dado que o ID  existe na base de dados e o e-mail é novo\r",
															"Quando enviar a requisição GET para a rota de edição por ID\r",
															"Entao a API deve retornar um código de status 200 (OK) e uma mensagem de sucesso ao alterar o registro\r",
															"*/\r",
															"\r",
															"pm.test(\"Status code é 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Validar mensagem de sucesso\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
															"}); \r",
															"\r",
															"pm.test(\"Validação da estrutura de resposta - Edição\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.be.an(\"object\");\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"nome\": \"Alteração Suceso\",\n  \"email\": \"alt_sucesso@pucminas.br\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"true\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "{{_id}}",
															"description": "(Required) ID do usuário"
														}
													]
												},
												"description": "Não é permitido cadastrar usuário com email já utilizado.\nCaso não seja encontrado usuário com o ID informado é realizado novo cadastro ao invés de alteração.\n"
											},
											"response": [
												{
													"name": "Editar usuário ALTERAÇÃO (sucesso)",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"nome\": \"Alteração Suceso\",\n  \"email\": \"alt_sucesso@pucminas.br\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"true\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "{{_id}}",
																	"description": "(Required) ID do usuário"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "50"
														},
														{
															"key": "Date",
															"value": "Wed, 25 Sep 2024 02:33:39 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Registro alterado com sucesso\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "DELETE (usuários {_ID})",
									"item": [
										{
											"name": "Excluir usuário",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"/* \r",
															"Cenario: Validar sucesso na exclusão de usuário\r",
															"Dado que o ID  existe na base de dados\r",
															"Quando enviar a requisição DEL para a rota de exclusão por ID\r",
															"Entao a API deve retornar um código de status 200 (OK) e uma mensagem de sucesso ao alterar o registro\r",
															"*/\r",
															"\r",
															"pm.test(\"Status code é 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Validar mensagem de sucesso\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
															"});\r",
															"\r",
															"pm.test(\"Validação da estrutura de resposta - Exclusão de usuário\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.be.an(\"object\");\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usuarios/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usuarios",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "HMLLJT6Xu8Q9dux2",
															"description": "(Required) ID do usuário"
														}
													]
												},
												"description": "Não é permitido excluir usuário com carrinho."
											},
											"response": [
												{
													"name": "Registro excluído com sucesso | Nenhum registro excluído",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "/localhost:3000/usuarios/:_id",
															"path": [
																"localhost:3000",
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Usuário com carrinho cadastrado",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"idCarrinho\": \"<string>\"\n}"
												},
												{
													"name": "Excluir usuário",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/usuarios/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usuarios",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "HMLLJT6Xu8Q9dux2",
																	"description": "(Required) ID do usuário"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "51"
														},
														{
															"key": "Date",
															"value": "Thu, 26 Sep 2024 22:38:11 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Registro excluído com sucesso\"\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Carrinho",
					"item": [
						{
							"name": "POST (carrinho)",
							"item": [
								{
									"name": "Cadastrar carrinho com sucesso",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar novo carrinho com sucesso\r",
													"Dado que envie todas as informações válidas\r",
													"Quando enviar a requisição POST para a rota de adição de carrinho\r",
													"Entao a API deve retornar um código de status 201 (Created) e confirmar que o novo carrinho foi cadastrado com sucesso.\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code é 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de sucesso\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
													"});\r",
													"\r",
													"const resposta = pm.response.json();\r",
													"pm.collectionVariables.set(\"_id\", resposta._id); \r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Sucesso\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"wIdw5eIn75bmCMdr\",\r\n      \"quantidade\": 3\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar carrinho com sucesso",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"wIdw5eIn75bmCMdr\",\r\n      \"quantidade\": 3\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/carrinhos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Date",
													"value": "Thu, 26 Sep 2024 23:40:19 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"IHQK09w1N5GHbLxR\"\n}"
										}
									]
								},
								{
									"name": "Cadastrar carrinho com produto duplicado",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar carrinho sem produto duplicado\r",
													"Dado que envie mais de uma vez o mesmo produto\r",
													"Quando enviar a requisição POST para a rota de adição de carrinho\r",
													"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando que algo deu errado\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Não é permitido possuir produto duplicado\");\r",
													"}); \r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar carrinho com produto duplicado",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/carrinhos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "128"
												},
												{
													"key": "Date",
													"value": "Fri, 27 Sep 2024 00:07:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Não é permitido possuir produto duplicado\",\n    \"idProdutosDuplicados\": [\n        \"BeeJh5lz3k6kSIzA\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Cadastrar mais de 1 carrinho",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar mais de 1 carrinho\r",
													"Dado que envie mais de 1 carrinho\r",
													"Quando enviar a requisição POST para a rota de adição de carrinho\r",
													"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando que algo deu errado\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Não é permitido ter mais de 1 carrinho\");\r",
													"}); \r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"YaeJ455lz3k6kSIzA\",\r\n      \"quantidade\": 3\r\n    }\r\n  ], \r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"YaeJ455lz3k6kSIzA\",\r\n      \"quantidade\": 3\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar mais de 1 carrinho",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"YaeJ455lz3k6kSIzA\",\r\n      \"quantidade\": 3\r\n    }\r\n  ], \r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 1\r\n    },\r\n    {\r\n      \"idProduto\": \"YaeJ455lz3k6kSIzA\",\r\n      \"quantidade\": 3\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/carrinhos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "61"
												},
												{
													"key": "Date",
													"value": "Thu, 26 Sep 2024 23:42:38 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Não é permitido ter mais de 1 carrinho\"\n}"
										}
									]
								},
								{
									"name": "Cadastrar carrinho com produto não encontrado",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar carrinho sem produto existente\r",
													"Dado que envie todas as informações válidas, exceto o campo produto\r",
													"Quando enviar a requisição POST para a rota de adição de carrinho\r",
													"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando que algo deu errado\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Produto não encontrado\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"abc123\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar carrinho com produto não encontrado",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"abc123\",\r\n      \"quantidade\": 1\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/carrinhos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "140"
												},
												{
													"key": "Date",
													"value": "Fri, 27 Sep 2024 00:07:27 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Produto não encontrado\",\n    \"item\": {\n        \"idProduto\": \"abc123\",\n        \"quantidade\": 1,\n        \"index\": 0\n    }\n}"
										}
									]
								},
								{
									"name": "Cadastrar carrinho com quantidade insuficiente de produto",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar carrinho sem quantidade suficiente do produto\r",
													"Dado que envie todas as informações válidas, exceto o campo quantidade\r",
													"Quando enviar a requisição POST para a rota de adição de carrinho\r",
													"Entao a API deve retornar um código de status 400 (Bad Request) e uma mensagem indicando que algo deu errado\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Produto não possui quantidade suficiente\");\r",
													"}); \r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 700\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": [
										{
											"name": "Cadastrar carrinho com quantidade insuficiente de produto",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"BeeJh5lz3k6kSIzA\",\r\n      \"quantidade\": 700\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/carrinhos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "204"
												},
												{
													"key": "Date",
													"value": "Fri, 27 Sep 2024 00:07:59 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Produto não possui quantidade suficiente\",\n    \"item\": {\n        \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n        \"quantidade\": 700,\n        \"quantidadeEstoque\": 381,\n        \"index\": 0\n    }\n}"
										}
									]
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar carrinho com token ausente, inválido ou expirado\r",
													"Dado que envie todas as informações válidas, exceto o campo token\r",
													"Quando enviar a requisição POST para a rota de adição de carrinho\r",
													"Entao a API deve retornar um código de status 401 (Unauthorized) e uma mensagem indicando o possível erro\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
													"}); \r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Token ausente\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<API Key>",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": [
										{
											"name": "Token ausente, inválido ou expirado",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<API Key>",
														"type": "text",
														"disabled": true
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/carrinhos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "103"
												},
												{
													"key": "Date",
													"value": "Thu, 26 Sep 2024 23:45:11 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "GET (carrinho)",
							"item": [
								{
									"name": "Listar carrinhos",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Listar os carrinhos\r",
													"Dado que envie todas as informações válidas\r",
													"Quando enviar a requisição GET para a rota de busca de carrinho\r",
													"Entao a API deve retornar um código de status 200 e todos os dados de todos os carrinhos cadastrados.\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code é 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Listagem de Carrinhos\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"quantidade\").that.is.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"carrinhos\").that.is.an(\"array\");\r",
													"    pm.expect(jsonData).to.have.property(\"produtos\").that.is.an(\"array\");\r",
													"    \r",
													"    jsonData.carrinho.forEach(function(carrinho) {\r",
													"        jsonData.carrinho.forEach(function(produto) {\r",
													"            pm.expect(produto).to.have.property(\"idProduto\").that.is.a(\"string\");\r",
													"            pm.expect(produto).to.have.property(\"quantidade\").that.is.a(\"string\");\r",
													"            pm.expect(produto).to.have.property(\"precoUnitario\").that.is.a(\"string\");\r",
													"            pm.expect(produto).to.be.an(\"object\");\r",
													"        });\r",
													"        pm.expect(carrinho).to.have.property(\"precoTotal\").that.is.a(\"number\");\r",
													"        pm.expect(carrinho).to.have.property(\"quantidadeTotal\").that.is.a(\"number\");\r",
													"        pm.expect(carrinho).to.have.property(\"idUsuario\").that.is.a(\"string\");\r",
													"        pm.expect(carrinho).to.have.property(\"_id\").that.is.a(\"string\");\r",
													"        pm.expect(carrinho).to.be.an(\"object\");\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{token}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carrinhos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos"
											]
										}
									},
									"response": [
										{
											"name": "Listar carrinhos",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/carrinhos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1143"
												},
												{
													"key": "Date",
													"value": "Thu, 26 Sep 2024 23:45:52 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"quantidade\": 2,\n    \"carrinhos\": [\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 470\n                },\n                {\n                    \"idProduto\": \"wIdw5eIn75bmCMdr\",\n                    \"quantidade\": 3,\n                    \"precoUnitario\": 4700\n                }\n            ],\n            \"precoTotal\": 14570,\n            \"quantidadeTotal\": 4,\n            \"idUsuario\": \"rjJSfHomZCJHxThP\",\n            \"_id\": \"IHQK09w1N5GHbLxR\"\n        },\n        {\n            \"produtos\": [\n                {\n                    \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n                    \"quantidade\": 2,\n                    \"precoUnitario\": 470\n                },\n                {\n                    \"idProduto\": \"K6leHdftCeOJj8BJ\",\n                    \"quantidade\": 1,\n                    \"precoUnitario\": 5240\n                }\n            ],\n            \"precoTotal\": 6180,\n            \"quantidadeTotal\": 3,\n            \"idUsuario\": \"0uxuPY0cbmQhpEz1\",\n            \"_id\": \"qbMqntef4iTOwWfg\"\n        }\n    ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "{_id}",
							"item": [
								{
									"name": "GET (carrinho {_ID})",
									"item": [
										{
											"name": "Buscar carrinho por ID (encontrado)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"/* \r",
															"Cenario: Buscar carrinho pelo ID\r",
															"Dado que o ID existe\r",
															"Quando enviar a requisição GET para a rota busca pelo id do carrinho\r",
															"Entao a API deve retornar um código de status 200 (Bad Request) e o retorno com todos os dados do carrinho\r",
															"*/\r",
															"\r",
															"pm.test(\"Status code é 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Validação da estrutura de resposta - Consulta de Produto por ID\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.be.an(\"object\");\r",
															"    pm.expect(jsonData).to.have.property(\"produtos\").that.is.an(\"array\");\r",
															"    \r",
															"    jsonData.produtos.forEach(function(produto) {\r",
															"        pm.expect(produto).to.be.an(\"object\");\r",
															"        pm.expect(produto).to.have.property(\"idProduto\").that.is.a(\"string\");\r",
															"        pm.expect(produto).to.have.property(\"quantidade\").that.is.a(\"number\")\r",
															"        pm.expect(produto).to.have.property(\"precoUnitario\").that.is.a(\"number\");\r",
															"        pm.expect(produto).to.have.property(\"_id\").that.is.a(\"string\");\r",
															"    });\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "IHQK09w1N5GHbLxR"
														}
													]
												}
											},
											"response": [
												{
													"name": "Buscar carrinho por ID (encontrado)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{token}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/carrinhos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"carrinhos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "IHQK09w1N5GHbLxR"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "402"
														},
														{
															"key": "Date",
															"value": "Thu, 26 Sep 2024 23:53:06 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"produtos\": [\n        {\n            \"idProduto\": \"BeeJh5lz3k6kSIzA\",\n            \"quantidade\": 1,\n            \"precoUnitario\": 470\n        },\n        {\n            \"idProduto\": \"wIdw5eIn75bmCMdr\",\n            \"quantidade\": 3,\n            \"precoUnitario\": 4700\n        }\n    ],\n    \"precoTotal\": 14570,\n    \"quantidadeTotal\": 4,\n    \"idUsuario\": \"rjJSfHomZCJHxThP\",\n    \"_id\": \"IHQK09w1N5GHbLxR\"\n}"
												}
											]
										},
										{
											"name": "Buscar carrinho por ID (não encontrado)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"/* \r",
															"Cenario: Buscar carrinho pelo ID\r",
															"Dado que o ID existe\r",
															"Quando enviar a requisição GET para a rota busca pelo id do carrinho\r",
															"Entao a API deve retornar um código de status 400 (Bad Request) e o retorno a mensagem de carrinho não encontrado\r",
															"*/\r",
															"\r",
															"pm.test(\"Status code é 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Validar mensagem de erro\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Carrinho não encontrado\");\r",
															"}); \r",
															"\r",
															"pm.test(\"Validação da estrutura de resposta - Erro\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.be.an(\"object\");\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/:_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														":_id"
													],
													"variable": [
														{
															"key": "_id",
															"value": "IHQK09w1N5G12345"
														}
													]
												}
											},
											"response": [
												{
													"name": "Buscar carrinho por ID (não encontrado)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "{{token}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/carrinhos/:_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"carrinhos",
																":_id"
															],
															"variable": [
																{
																	"key": "_id",
																	"value": "IHQK09w1N5G12345"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "x-dns-prefetch-control",
															"value": "off"
														},
														{
															"key": "x-frame-options",
															"value": "SAMEORIGIN"
														},
														{
															"key": "strict-transport-security",
															"value": "max-age=15552000; includeSubDomains"
														},
														{
															"key": "x-download-options",
															"value": "noopen"
														},
														{
															"key": "x-content-type-options",
															"value": "nosniff"
														},
														{
															"key": "x-xss-protection",
															"value": "1; mode=block"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "45"
														},
														{
															"key": "Date",
															"value": "Thu, 26 Sep 2024 23:54:28 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"body": "{\n    \"message\": \"Carrinho não encontrado\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "DELETE (carrinho)",
							"item": [
								{
									"name": "Concluir compra com sucesso",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar carrinho sem quantidade suficiente do produto\r",
													"Dado que envie todas as informações válidas, exceto o campo quantidade\r",
													"Quando enviar a requisição POST para a rota de adição de carrinho\r",
													"Entao a API deve retornar um código de status 200 (OK) e uma mensagem indicando que algo deu errado\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
													"}); \r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Exclusão de Compra concluída\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"}); "
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/concluir-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": [
										{
											"name": "Concluir compra com sucesso",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/concluir-compra",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														"concluir-compra"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "51"
												},
												{
													"key": "Date",
													"value": "Fri, 27 Sep 2024 00:01:55 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Registro excluído com sucesso\"\n}"
										}
									]
								},
								{
									"name": "Concluir compra para usuário sem carrinho",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar carrinho sem quantidade suficiente do produto\r",
													"Dado que envie todas as informações válidas, exceto o campo quantidade\r",
													"Quando enviar a requisição POST para a rota de adição de carrinho\r",
													"Entao a API deve retornar um código de status 200 (OK) e uma mensagem indicando que algo deu errado\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Não foi encontrado carrinho para esse usuário\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Exclusão de Compra para usuário sem carrinho\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token_semcarrinho}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/concluir-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": [
										{
											"name": "Concluir compra para usuário sem carrinho",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "{{token_semcarrinho}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/concluir-compra",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														"concluir-compra"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "68"
												},
												{
													"key": "Date",
													"value": "Fri, 27 Sep 2024 00:03:54 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Não foi encontrado carrinho para esse usuário\"\n}"
										}
									]
								},
								{
									"name": "Concluir compra para token ausente, inválido ou expirado",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/* \r",
													"Cenario: Cadastrar carrinho sem quantidade suficiente do produto\r",
													"Dado que envie todas as informações válidas, exceto o campo quantidade\r",
													"Quando enviar a requisição POST para a rota de adição de carrinho\r",
													"Entao a API deve retornar um código de status 401 (Unauthorized) e uma mensagem indicando que Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\r",
													"*/\r",
													"\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validação da estrutura de resposta - Token ausente\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "123456789",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/concluir-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"response": [
										{
											"name": "Concluir compra para Token de acesso ausente, inválido, expirado",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "123456789",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/carrinhos/concluir-compra",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carrinhos",
														"concluir-compra"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-dns-prefetch-control",
													"value": "off"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "x-download-options",
													"value": "noopen"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "103"
												},
												{
													"key": "Date",
													"value": "Fri, 27 Sep 2024 00:05:52 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	]
}